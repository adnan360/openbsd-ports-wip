$OpenBSD$

Fix compilation, from:
https://git.archlinux.org/svntogit/community.git/commit/trunk?h=packages/dee&id=ea70275efb988b1c2e7ac9999696fc5b03b3d435

Index: src/dee-file-resource-manager.c
--- src/dee-file-resource-manager.c.orig
+++ src/dee-file-resource-manager.c
@@ -41,15 +41,7 @@
 #include "trace-log.h"
 
 static void dee_file_resource_manager_resource_manager_iface_init (DeeResourceManagerIface *iface);
-G_DEFINE_TYPE_WITH_CODE (DeeFileResourceManager,
-                         dee_file_resource_manager,
-                         G_TYPE_OBJECT,
-                         G_IMPLEMENT_INTERFACE (DEE_TYPE_RESOURCE_MANAGER,
-                                                dee_file_resource_manager_resource_manager_iface_init))
 
-#define DEE_FILE_RESOURCE_MANAGER_GET_PRIVATE(obj) \
-  (G_TYPE_INSTANCE_GET_PRIVATE(obj, DEE_TYPE_FILE_RESOURCE_MANAGER, DeeFileResourceManagerPrivate))
-
 enum
 {
   PROP_0,
@@ -66,13 +58,20 @@ typedef struct
   GHashTable *monitors_by_id;
 } DeeFileResourceManagerPrivate;
 
+G_DEFINE_TYPE_WITH_CODE (DeeFileResourceManager,
+                         dee_file_resource_manager,
+                         G_TYPE_OBJECT,
+                         G_ADD_PRIVATE(DeeFileResourceManager)
+                         G_IMPLEMENT_INTERFACE (DEE_TYPE_RESOURCE_MANAGER,
+                                                dee_file_resource_manager_resource_manager_iface_init))
+
 /* GObject Init */
 static void
 dee_file_resource_manager_finalize (GObject *object)
 {
   DeeFileResourceManagerPrivate *priv;
   
-  priv = DEE_FILE_RESOURCE_MANAGER_GET_PRIVATE (object);
+  priv = dee_file_resource_manager_get_instance_private ((DeeFileResourceManager*) object);
   
   g_slist_free_full (priv->resource_dirs, g_free);
   priv->resource_dirs = NULL;
@@ -121,7 +120,7 @@ dee_file_resource_manager_get_property (GObject     *o
 {
   DeeFileResourceManagerPrivate *priv;
 
-  priv = DEE_FILE_RESOURCE_MANAGER_GET_PRIVATE (object);
+  priv = dee_file_resource_manager_get_instance_private ((DeeFileResourceManager *) object);
 
   switch (id)
     {
@@ -156,9 +155,6 @@ dee_file_resource_manager_class_init (DeeFileResourceM
                               G_PARAM_READWRITE | G_PARAM_CONSTRUCT_ONLY
                               | G_PARAM_STATIC_STRINGS);
   g_object_class_install_property (obj_class, PROP_PRIMARY_PATH, pspec);
-
-  /* Add private data */
-  g_type_class_add_private (obj_class, sizeof (DeeFileResourceManagerPrivate));
 }
 
 static void
@@ -166,7 +162,7 @@ dee_file_resource_manager_init (DeeFileResourceManager
 {
   DeeFileResourceManagerPrivate *priv;
 
-  priv = DEE_FILE_RESOURCE_MANAGER_GET_PRIVATE (self);
+  priv = dee_file_resource_manager_get_instance_private (self);
   priv->resource_dirs = NULL;
   priv->monitors_by_id = g_hash_table_new_full(g_direct_hash,
                                                g_direct_equal,
@@ -222,7 +218,7 @@ dee_file_resource_manager_add_search_path (DeeResource
   g_return_if_fail (DEE_IS_FILE_RESOURCE_MANAGER (self));
   g_return_if_fail (path != NULL);
 
-  priv = DEE_FILE_RESOURCE_MANAGER_GET_PRIVATE (self);
+  priv = dee_file_resource_manager_get_instance_private ((DeeFileResourceManager *) self);
   priv->resource_dirs = g_slist_append (priv->resource_dirs,
                                         g_strdup (path));
 }
@@ -242,7 +238,7 @@ dee_file_resource_manager_get_primary_path (DeeResourc
 
   g_return_val_if_fail (DEE_IS_FILE_RESOURCE_MANAGER (self), NULL);
 
-  priv = DEE_FILE_RESOURCE_MANAGER_GET_PRIVATE (self);
+  priv = dee_file_resource_manager_get_instance_private ((DeeFileResourceManager *) self);
   return (const gchar *) priv->resource_dirs->data;
 }
 
@@ -393,7 +389,7 @@ dee_file_resource_manager_load (DeeResourceManager *se
   g_return_val_if_fail (resource_name != NULL, NULL);
   g_return_val_if_fail (error == NULL || *error == NULL, NULL);
 
-  priv = DEE_FILE_RESOURCE_MANAGER_GET_PRIVATE (self);
+  priv = dee_file_resource_manager_get_instance_private ((DeeFileResourceManager *) self);
 
   for (iter = priv->resource_dirs; iter != NULL; iter = iter->next)
     {

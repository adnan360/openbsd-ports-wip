$OpenBSD$

Fix compilation, from:
https://git.archlinux.org/svntogit/community.git/commit/trunk?h=packages/dee&id=ea70275efb988b1c2e7ac9999696fc5b03b3d435

Index: src/dee-peer.c
--- src/dee-peer.c.orig
+++ src/dee-peer.c
@@ -62,11 +62,6 @@
 #include "dee-marshal.h"
 #include "trace-log.h"
 
-G_DEFINE_TYPE (DeePeer, dee_peer, G_TYPE_OBJECT)
-
-#define DEE_PEER_GET_PRIVATE(obj) \
-  (G_TYPE_INSTANCE_GET_PRIVATE(obj, DEE_TYPE_PEER, DeePeerPrivate))
-
 #define _DeePeerIter GSequenceIter
 
 /**
@@ -145,6 +140,8 @@ enum
   LAST_SIGNAL
 };
 
+G_DEFINE_TYPE_WITH_PRIVATE (DeePeer, dee_peer, G_TYPE_OBJECT)
+
 static guint32 _peer_signals[LAST_SIGNAL] = { 0 };
 
 /* Forwards */
@@ -568,9 +565,6 @@ dee_peer_class_init (DeePeerClass *klass)
                                 G_PARAM_READWRITE | G_PARAM_CONSTRUCT_ONLY
                                 | G_PARAM_STATIC_STRINGS);
   g_object_class_install_property (obj_class, PROP_SWARM_OWNER, pspec);
-
-  /* Add private data */
-  g_type_class_add_private (obj_class, sizeof (DeePeerPrivate));
 }
 
 static void
@@ -578,7 +572,7 @@ dee_peer_init (DeePeer *peer)
 {
   DeePeerPrivate *priv;
 
-  priv = peer->priv = DEE_PEER_GET_PRIVATE (peer);
+  priv = peer->priv = dee_peer_get_instance_private (peer);
 
   priv->swarm_name = NULL;
   priv->swarm_leader = NULL;
